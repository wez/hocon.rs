var N=null,E="",T="t",U="u",searchIndex={};
var R=["hocon::Error","hocon","option","string","duration","result","error","resolve","Deserialize the loaded documents to the target type","to_owned","clone_into","try_from","try_into","borrow_mut","type_id","formatter","HoconLoader"];
searchIndex["hocon"]={"doc":"HOCON","i":[[3,R[16],R[1],"Helper to load an HOCON file. This is used to set up the…",N,N],[4,"Hocon",E,"An HOCON document",N,N],[13,"Real",E,"A floating value",0,N],[13,"Integer",E,"An integer value",0,N],[13,"String",E,"A string",0,N],[13,"Boolean",E,"A boolean",0,N],[13,"Array",E,"An array of `Hocon` values",0,N],[13,"Hash",E,"An HashMap of `Hocon` values with keys",0,N],[13,"Null",E,"A null value",0,N],[13,"BadValue",E,"A `BadValue`, marking an error in parsing or a missing value",0,N],[4,"Error",E,"Errors that can be encountered while reading a HOCON…",N,N],[13,"File",E,"Error reading a file. This can be a file not found, a…",1,N],[12,"path",R[0],"Path to the file being read",1,N],[13,"Parse",R[1],"Error while parsing a document. The document is not valid…",1,N],[13,"Include",E,"Error including a document",1,N],[12,"path",R[0],"Path of the included file",1,N],[13,"TooManyIncludes",R[1],"Error processing deep includes. You can change the maximum…",1,N],[13,"IncludeNotAllowedFromStr",E,"Error processing includes from a str source. This is not…",1,N],[13,"DisabledExternalUrl",E,"Error including document with External URL as feature has…",1,N],[13,"KeyNotFound",E,"Error looking for a key",1,N],[12,"key",R[0],"Key that was searched",1,N],[13,"MissingKey",R[1],"Error getting a value because key is not present",1,N],[13,"InvalidKey",E,"Error getting a value because of an invalid key type",1,N],[13,"Deserialization",E,"Error deserializing",1,N],[12,"message",R[0],"Error message returned from deserialization",1,N],[11,"as_f64",R[1],"Try to cast a value as a `f64` value",0,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,"as_i64",E,"Try to cast a value as a `i64` value",0,[[["self"]],[["i64"],[R[2],["i64"]]]]],[11,"as_string",E,"Try to cast a value as a `String` value",0,[[["self"]],[[R[3]],[R[2],[R[3]]]]]],[11,"as_bool",E,"Try to cast a value as a `bool` value",0,[[["self"]],[[R[2],["bool"]],["bool"]]]],[11,"as_bytes",E,"Try to return a value as a size in bytes according to size…",0,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,"as_milliseconds",E,"Try to return a value as a duration in milliseconds…",0,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,"as_nanoseconds",E,"Try to return a value as a duration in nanoseconds…",0,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,"as_microseconds",E,"Try to return a value as a duration in microseconds…",0,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,"as_seconds",E,"Try to return a value as a duration in seconds according…",0,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,"as_minutes",E,"Try to return a value as a duration in minutes according…",0,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,"as_hours",E,"Try to return a value as a duration in hours according to…",0,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,"as_days",E,"Try to return a value as a duration in days according to…",0,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,"as_weeks",E,"Try to return a value as a duration in weeks according to…",0,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,"as_months",E,"Try to return a value as a duration in months according to…",0,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,"as_years",E,"Try to return a value as a duration in years according to…",0,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,"as_duration",E,"Try to return a value as a duration according to duration…",0,[[["self"]],[[R[2],[R[4]]],[R[4]]]]],[11,R[7],E,R[8],0,[[],[[R[6]],[R[5],[R[6]]]]]],[11,"new",E,"New `HoconLoader` with default configuration",2,[[],["self"]]],[11,"no_system",E,"Disable System environment substitutions",2,[[["self"]],["self"]]],[11,"no_url_include",E,"Disable loading included files from external urls.",2,[[["self"]],["self"]]],[11,"strict",E,"Sets the HOCON loader to return the first `Error`…",2,[[["self"]],["self"]]],[11,"max_include_depth",E,"Set a new maximum include depth, by default 10",2,[[["self"],["u8"]],["self"]]],[11,"load_str",E,"Load a string containing an `Hocon` document. Includes are…",2,[[["str"]],[[R[5],[R[6]]],[R[6]]]]],[11,"load_file",E,"Load the HOCON configuration file containing an `Hocon`…",2,[[["self"],["asref",["path"]],["path"]],[[R[5],[R[6]]],[R[6]]]]],[11,R[1],E,"Load the documents as HOCON",2,[[],[[R[5],[R[1],R[6]]],[R[6]],[R[1]]]]],[11,R[7],E,R[8],2,[[],[[R[5],[R[6]]],[R[6]]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[5]]]],[11,R[12],E,E,2,[[],[R[5]]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],["typeid"]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[5]]]],[11,R[12],E,E,0,[[],[R[5]]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],["typeid"]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"to_string",E,E,1,[[["self"]],[R[3]]]],[11,R[11],E,E,1,[[[U]],[R[5]]]],[11,R[12],E,E,1,[[],[R[5]]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],["typeid"]]],[11,"as_fail",E,E,1,[[["self"]],["fail"]]],[11,"default",E,E,2,[[],["self"]]],[11,"clone",E,E,0,[[["self"]],[R[1]]]],[11,"clone",E,E,1,[[["self"]],[R[6]]]],[11,"clone",E,E,2,[[["self"]],["hoconloader"]]],[11,"eq",E,E,0,[[["self"],[R[1]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[6]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[6]]],["bool"]]],[11,"index",E,E,0,[[["self"],["str"]]]],[11,"index",E,E,0,[[["self"],["usize"]]]],[11,"fmt",E,E,0,[[["self"],[R[15]]],[R[5]]]],[11,"fmt",E,E,1,[[["self"],[R[15]]],[R[5]]]],[11,"fmt",E,E,2,[[["self"],[R[15]]],[R[5]]]],[11,"fmt",E,E,1,[[["self"],[R[15]]],[R[5]]]]],"p":[[4,"Hocon"],[4,"Error"],[3,R[16]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);